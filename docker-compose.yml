services:
  db:
    container_name: "db"
    image: postgres:16-alpine
    restart: always
    environment:
      - POSTGRES_USER=${USER}
      - POSTGRES_PASSWORD=${PASS}
      - POSTGRES_DB=${DB}
    ports:
      - "5432:5432"
    networks:
      - custom
    volumes:
      - pg_data_prod:/var/lib/postgresql/data
      - ./etc/init-exporter.sh:/docker-entrypoint-initdb.d/init-exporter.sh:ro

  fastapi:
    container_name: "fastapi"
    image: fastapi
    depends_on:
      - db
    env_file:
      - .env
    ports:
      - "8000:8000"
    build:
      context: .
      dockerfile: etc/prod/Dockerfile
    networks:
      - custom

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.enable-remote-write-receiver
    volumes:
      - ./etc/prod/prometheus/prometheus-config.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - fastapi
    ports:
      - "9090:9090"
    networks:
      - custom

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    command:
      - -config.expand-env=true
      - -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./etc/prod/loki/loki-config.yaml:/etc/loki/local-config.yaml:ro
    depends_on:
      - fastapi
    restart: unless-stopped
    networks:
      - custom

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    command: [ "-config.file=/etc/tempo.yml", "--target=all", "--storage.trace.backend=local", "--storage.trace.local.path=/var/tempo", "--auth.enabled=false" ]
    ports:
      - 4317:4317   # otlp http
      - 4318:4318   # otlp grpc
    volumes:
      - ./etc/prod/tempo/tempo-config.yaml:/etc/tempo.yml
    depends_on:
      - loki
    networks:
      - custom

  promtail:
    pull_policy: always
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers
      - ./etc/prod/promtail/promtail-config.yaml:/etc/promtail/config.yml:ro
    ports:
      - "9080:9080"
    command:
      - -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    restart: unless-stopped
    networks:
      - custom

  grafana:
    pull_policy: always
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_storage:/var/lib/grafana
    depends_on:
      - prometheus
      - loki
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    networks:
      - custom

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    restart: always
    ports:
      - "9100:9100"
    networks:
      - custom
    depends_on:
      - grafana

  postgres_exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres_exporter
    restart: always
    env_file:
      - .env
    environment:
      - DATA_SOURCE_NAME=postgresql://${EXPORTER_USER}:${EXPORTER_PASS}@db:5432/${DB}?sslmode=disable
    ports:
      - "9187:9187"
    networks:
      - custom
    depends_on:
      - grafana

networks:
  custom:
    driver: bridge

volumes:
  grafana_storage:
  pg_data_prod:

